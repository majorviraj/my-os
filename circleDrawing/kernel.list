
build/output.elf:     file format elf32-littlearm


Disassembly of section .init:

00008000 <_start>:
    8000:	ea000122 	b	8490 <main>

Disassembly of section .text:

00008004 <getMailBoxBaseAddress>:
    8004:	e59f0064 	ldr	r0, [pc, #100]	; 8070 <wait2$+0x24>
    8008:	e1a0f00e 	mov	pc, lr

0000800c <mailboxWrite>:
    800c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    8010:	e1a03000 	mov	r3, r0
    8014:	ebfffffa 	bl	8004 <getMailBoxBaseAddress>
    8018:	e351000f 	cmp	r1, #15
    801c:	849df004 	pophi	{pc}		; (ldrhi pc, [sp], #4)

00008020 <wait1$>:
    8020:	e5902018 	ldr	r2, [r0, #24]
    8024:	e3120102 	tst	r2, #-2147483648	; 0x80000000
    8028:	1afffffc 	bne	8020 <wait1$>
    802c:	e0811003 	add	r1, r1, r3
    8030:	e5801020 	str	r1, [r0, #32]
    8034:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00008038 <mailboxRead>:
    8038:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    803c:	e350000f 	cmp	r0, #15
    8040:	81a0f00e 	movhi	pc, lr
    8044:	e1a01000 	mov	r1, r0
    8048:	ebffffed 	bl	8004 <getMailBoxBaseAddress>

0000804c <wait2$>:
    804c:	e5903018 	ldr	r3, [r0, #24]
    8050:	e3130101 	tst	r3, #1073741824	; 0x40000000
    8054:	1afffffc 	bne	804c <wait2$>
    8058:	e5902000 	ldr	r2, [r0]
    805c:	e202300f 	and	r3, r2, #15
    8060:	e1330001 	teq	r3, r1
    8064:	1afffff8 	bne	804c <wait2$>
    8068:	e3c2000f 	bic	r0, r2, #15
    806c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
    8070:	2000b880 	.word	0x2000b880

00008074 <frameBufferInit>:
    8074:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    8078:	e3500a01 	cmp	r0, #4096	; 0x1000
    807c:	93510a01 	cmpls	r1, #4096	; 0x1000
    8080:	93520020 	cmpls	r2, #32
    8084:	83a00000 	movhi	r0, #0
    8088:	81a0f00e 	movhi	pc, lr
    808c:	e59f3048 	ldr	r3, [pc, #72]	; 80dc <frameBufferInit+0x68>
    8090:	e5830000 	str	r0, [r3]
    8094:	e5831004 	str	r1, [r3, #4]
    8098:	e5830008 	str	r0, [r3, #8]
    809c:	e583100c 	str	r1, [r3, #12]
    80a0:	e5832014 	str	r2, [r3, #20]
    80a4:	e1a00003 	mov	r0, r3
    80a8:	e2800101 	add	r0, r0, #1073741824	; 0x40000000
    80ac:	e3a01001 	mov	r1, #1
    80b0:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
    80b4:	ebffffd4 	bl	800c <mailboxWrite>
    80b8:	e3a00001 	mov	r0, #1
    80bc:	ebffffdd 	bl	8038 <mailboxRead>
    80c0:	e49d3004 	pop	{r3}		; (ldr r3, [sp], #4)
    80c4:	e3300000 	teq	r0, #0
    80c8:	13a00000 	movne	r0, #0
    80cc:	149df004 	popne	{pc}		; (ldrne pc, [sp], #4)
    80d0:	e1a00003 	mov	r0, r3
    80d4:	eb000011 	bl	8120 <setGraphicsAddress>
    80d8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
    80dc:	00009000 	.word	0x00009000

000080e0 <GetTimerBase>:
    80e0:	e59f0034 	ldr	r0, [pc, #52]	; 811c <waitLoop$+0x14>
    80e4:	e1a0f00e 	mov	pc, lr

000080e8 <GetTimeStamp>:
    80e8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    80ec:	ebfffffb 	bl	80e0 <GetTimerBase>
    80f0:	e1c000d4 	ldrd	r0, [r0, #4]
    80f4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

000080f8 <delayMicro>:
    80f8:	e1a02000 	mov	r2, r0
    80fc:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    8100:	ebfffff8 	bl	80e8 <GetTimeStamp>
    8104:	e1a03000 	mov	r3, r0

00008108 <waitLoop$>:
    8108:	ebfffff6 	bl	80e8 <GetTimeStamp>
    810c:	e0401003 	sub	r1, r0, r3
    8110:	e1510002 	cmp	r1, r2
    8114:	9afffffb 	bls	8108 <waitLoop$>
    8118:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
    811c:	20003000 	.word	0x20003000

00008120 <setGraphicsAddress>:
    8120:	e59f12d8 	ldr	r1, [pc, #728]	; 8400 <drawloop$+0xe8>
    8124:	e5810000 	str	r0, [r1]
    8128:	e1a0f00e 	mov	pc, lr

0000812c <setForeColour>:
    812c:	e3500801 	cmp	r0, #65536	; 0x10000
    8130:	21a0f00e 	movcs	pc, lr
    8134:	e59f12c8 	ldr	r1, [pc, #712]	; 8404 <drawloop$+0xec>
    8138:	e1c100b0 	strh	r0, [r1]
    813c:	e1a0f00e 	mov	pc, lr

00008140 <drawPixel>:
    8140:	e59f22b8 	ldr	r2, [pc, #696]	; 8400 <drawloop$+0xe8>
    8144:	e5922000 	ldr	r2, [r2]
    8148:	e592300c 	ldr	r3, [r2, #12]
    814c:	e1510003 	cmp	r1, r3
    8150:	21a0f00e 	movcs	pc, lr
    8154:	e5923008 	ldr	r3, [r2, #8]
    8158:	e1500003 	cmp	r0, r3
    815c:	21a0f00e 	movcs	pc, lr
    8160:	e0220391 	mla	r2, r1, r3, r0
    8164:	e59f329c 	ldr	r3, [pc, #668]	; 8408 <drawloop$+0xf0>
    8168:	e5933020 	ldr	r3, [r3, #32]
    816c:	e0833082 	add	r3, r3, r2, lsl #1
    8170:	e1a02003 	mov	r2, r3
    8174:	e59f0288 	ldr	r0, [pc, #648]	; 8404 <drawloop$+0xec>
    8178:	e1d000b0 	ldrh	r0, [r0]
    817c:	e1c200b0 	strh	r0, [r2]
    8180:	e1a0f00e 	mov	pc, lr

00008184 <drawLine>:
    8184:	e92d5ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
    8188:	e1a09000 	mov	r9, r0
    818c:	e1a0a001 	mov	sl, r1
    8190:	e1a0b002 	mov	fp, r2
    8194:	e1a0c003 	mov	ip, r3
    8198:	e15b0009 	cmp	fp, r9
    819c:	a04b4009 	subge	r4, fp, r9
    81a0:	a3a06001 	movge	r6, #1
    81a4:	9049400b 	subls	r4, r9, fp
    81a8:	93e06000 	mvnls	r6, #0
    81ac:	e15c000a 	cmp	ip, sl
    81b0:	a04a500c 	subge	r5, sl, ip
    81b4:	a3a07001 	movge	r7, #1
    81b8:	904c500a 	subls	r5, ip, sl
    81bc:	93e07000 	mvnls	r7, #0
    81c0:	e0848005 	add	r8, r4, r5
    81c4:	e08bb006 	add	fp, fp, r6
    81c8:	e08cc007 	add	ip, ip, r7

000081cc <decisionLoop$>:
    81cc:	e139000b 	teq	r9, fp
    81d0:	113a000c 	teqne	sl, ip
    81d4:	08bd9ff0 	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
    81d8:	e1a00009 	mov	r0, r9
    81dc:	e1a0100a 	mov	r1, sl
    81e0:	ebffffd6 	bl	8140 <drawPixel>
    81e4:	e1550088 	cmp	r5, r8, lsl #1
    81e8:	d0888005 	addle	r8, r8, r5
    81ec:	d0899006 	addle	r9, r9, r6
    81f0:	e1540088 	cmp	r4, r8, lsl #1
    81f4:	a0888004 	addge	r8, r8, r4
    81f8:	a08aa007 	addge	sl, sl, r7
    81fc:	eafffff2 	b	81cc <decisionLoop$>

00008200 <drawCharacter>:
    8200:	e350007f 	cmp	r0, #127	; 0x7f
    8204:	83a00000 	movhi	r0, #0
    8208:	83a01000 	movhi	r1, #0
    820c:	81a0f00e 	movhi	pc, lr
    8210:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
    8214:	e1a04000 	mov	r4, r0
    8218:	e1a05001 	mov	r5, r1
    821c:	e1a06002 	mov	r6, r2
    8220:	e59f71e4 	ldr	r7, [pc, #484]	; 840c <drawloop$+0xf4>
    8224:	e0877204 	add	r7, r7, r4, lsl #4

00008228 <printChar$>:
    8228:	e5d78000 	ldrb	r8, [r7]
    822c:	e3a04008 	mov	r4, #8
    8230:	e2855008 	add	r5, r5, #8

00008234 <loop2$>:
    8234:	e2544001 	subs	r4, r4, #1
    8238:	ba000006 	blt	8258 <endOfLoop$>
    823c:	e1a08088 	lsl	r8, r8, #1
    8240:	e3180c01 	tst	r8, #256	; 0x100
    8244:	11a00005 	movne	r0, r5
    8248:	11a01006 	movne	r1, r6
    824c:	1bffffbb 	blne	8140 <drawPixel>
    8250:	e2455001 	sub	r5, r5, #1
    8254:	eafffff6 	b	8234 <loop2$>

00008258 <endOfLoop$>:
    8258:	e2866001 	add	r6, r6, #1
    825c:	e2877001 	add	r7, r7, #1
    8260:	e317000f 	tst	r7, #15
    8264:	1affffef 	bne	8228 <printChar$>
    8268:	e3a00008 	mov	r0, #8
    826c:	e3a01010 	mov	r1, #16
    8270:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}

00008274 <printString>:
    8274:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
    8278:	e1a04000 	mov	r4, r0
    827c:	e1a05001 	mov	r5, r1
    8280:	e1a06002 	mov	r6, r2
    8284:	e1a09002 	mov	r9, r2
    8288:	e1a07003 	mov	r7, r3
    828c:	e3a00020 	mov	r0, #32
    8290:	e3a01000 	mov	r1, #0
    8294:	e3a02000 	mov	r2, #0
    8298:	ebffffd8 	bl	8200 <drawCharacter>

0000829c <charPrintLoop$>:
    829c:	e5d48000 	ldrb	r8, [r4]
    82a0:	e2844001 	add	r4, r4, #1
    82a4:	e338000a 	teq	r8, #10
    82a8:	00877001 	addeq	r7, r7, r1
    82ac:	01a06009 	moveq	r6, r9
    82b0:	0afffff9 	beq	829c <charPrintLoop$>
    82b4:	e3380009 	teq	r8, #9
    82b8:	00866100 	addeq	r6, r6, r0, lsl #2
    82bc:	0afffff6 	beq	829c <charPrintLoop$>
    82c0:	e3560b01 	cmp	r6, #1024	; 0x400
    82c4:	00877001 	addeq	r7, r7, r1
    82c8:	01a06009 	moveq	r6, r9
    82cc:	e1a00008 	mov	r0, r8
    82d0:	e1a01006 	mov	r1, r6
    82d4:	e1a02007 	mov	r2, r7
    82d8:	ebffffc8 	bl	8200 <drawCharacter>
    82dc:	e0866000 	add	r6, r6, r0
    82e0:	e2555001 	subs	r5, r5, #1
    82e4:	1affffec 	bne	829c <charPrintLoop$>
    82e8:	e8bd43f0 	pop	{r4, r5, r6, r7, r8, r9, lr}

000082ec <drawCircle>:
    82ec:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    82f0:	e3500000 	cmp	r0, #0
    82f4:	a3510000 	cmpge	r1, #0
    82f8:	a3520000 	cmpge	r2, #0
    82fc:	b8bd87f0 	poplt	{r4, r5, r6, r7, r8, r9, sl, pc}
    8300:	e1a04000 	mov	r4, r0
    8304:	e1a05001 	mov	r5, r1
    8308:	e1a06002 	mov	r6, r2
    830c:	e3a09000 	mov	r9, #0
    8310:	e1a07006 	mov	r7, r6
    8314:	e3a08000 	mov	r8, #0

00008318 <drawloop$>:
    8318:	e1a00007 	mov	r0, r7
    831c:	e1a01008 	mov	r1, r8
    8320:	e0800004 	add	r0, r0, r4
    8324:	e0811005 	add	r1, r1, r5
    8328:	ebffff84 	bl	8140 <drawPixel>
    832c:	e1a00008 	mov	r0, r8
    8330:	e1a01007 	mov	r1, r7
    8334:	e0800004 	add	r0, r0, r4
    8338:	e0811005 	add	r1, r1, r5
    833c:	ebffff7f 	bl	8140 <drawPixel>
    8340:	e1a00008 	mov	r0, r8
    8344:	e1a01007 	mov	r1, r7
    8348:	e2600000 	rsb	r0, r0, #0
    834c:	e0800004 	add	r0, r0, r4
    8350:	e0811005 	add	r1, r1, r5
    8354:	ebffff79 	bl	8140 <drawPixel>
    8358:	e1a00007 	mov	r0, r7
    835c:	e1a01008 	mov	r1, r8
    8360:	e2600000 	rsb	r0, r0, #0
    8364:	e0800004 	add	r0, r0, r4
    8368:	e0811005 	add	r1, r1, r5
    836c:	ebffff73 	bl	8140 <drawPixel>
    8370:	e1a00007 	mov	r0, r7
    8374:	e1a01008 	mov	r1, r8
    8378:	e2600000 	rsb	r0, r0, #0
    837c:	e2611000 	rsb	r1, r1, #0
    8380:	e0800004 	add	r0, r0, r4
    8384:	e0811005 	add	r1, r1, r5
    8388:	ebffff6c 	bl	8140 <drawPixel>
    838c:	e1a00008 	mov	r0, r8
    8390:	e1a01007 	mov	r1, r7
    8394:	e2600000 	rsb	r0, r0, #0
    8398:	e2611000 	rsb	r1, r1, #0
    839c:	e0800004 	add	r0, r0, r4
    83a0:	e0811005 	add	r1, r1, r5
    83a4:	ebffff65 	bl	8140 <drawPixel>
    83a8:	e1a00008 	mov	r0, r8
    83ac:	e1a01007 	mov	r1, r7
    83b0:	e2611000 	rsb	r1, r1, #0
    83b4:	e0800004 	add	r0, r0, r4
    83b8:	e0811005 	add	r1, r1, r5
    83bc:	ebffff5f 	bl	8140 <drawPixel>
    83c0:	e1a00007 	mov	r0, r7
    83c4:	e1a01008 	mov	r1, r8
    83c8:	e2611000 	rsb	r1, r1, #0
    83cc:	e0800004 	add	r0, r0, r4
    83d0:	e0811005 	add	r1, r1, r5
    83d4:	ebffff59 	bl	8140 <drawPixel>
    83d8:	e3590000 	cmp	r9, #0
    83dc:	e0899088 	add	r9, r9, r8, lsl #1
    83e0:	e2899001 	add	r9, r9, #1
    83e4:	a0499087 	subge	r9, r9, r7, lsl #1
    83e8:	a2899001 	addge	r9, r9, #1
    83ec:	a2477001 	subge	r7, r7, #1
    83f0:	e2888001 	add	r8, r8, #1
    83f4:	e1580007 	cmp	r8, r7
    83f8:	a8bd87f0 	popge	{r4, r5, r6, r7, r8, r9, sl, pc}
    83fc:	eaffffc5 	b	8318 <drawloop$>
    8400:	00009034 	.word	0x00009034
    8404:	00009030 	.word	0x00009030
    8408:	00009000 	.word	0x00009000
    840c:	00009040 	.word	0x00009040

00008410 <GetGpioAddress>:
    8410:	e59f0074 	ldr	r0, [pc, #116]	; 848c <SetGpio+0x3c>
    8414:	e1a0f00e 	mov	pc, lr

00008418 <SetGpioFunction>:
    8418:	e3500035 	cmp	r0, #53	; 0x35
    841c:	93510007 	cmpls	r1, #7
    8420:	81a0f00e 	movhi	pc, lr
    8424:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    8428:	e1a02000 	mov	r2, r0
    842c:	ebfffff7 	bl	8410 <GetGpioAddress>

00008430 <functionLoop$>:
    8430:	e3520009 	cmp	r2, #9
    8434:	8242200a 	subhi	r2, r2, #10
    8438:	82800004 	addhi	r0, r0, #4
    843c:	8afffffb 	bhi	8430 <functionLoop$>
    8440:	e0822082 	add	r2, r2, r2, lsl #1
    8444:	e1a01211 	lsl	r1, r1, r2
    8448:	e5801000 	str	r1, [r0]
    844c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00008450 <SetGpio>:
    8450:	e3500035 	cmp	r0, #53	; 0x35
    8454:	81a0f00e 	movhi	pc, lr
    8458:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    845c:	e1a02000 	mov	r2, r0
    8460:	ebffffea 	bl	8410 <GetGpioAddress>
    8464:	e1a032a2 	lsr	r3, r2, #5
    8468:	e1a03103 	lsl	r3, r3, #2
    846c:	e0800003 	add	r0, r0, r3
    8470:	e202201f 	and	r2, r2, #31
    8474:	e3a03001 	mov	r3, #1
    8478:	e1a03213 	lsl	r3, r3, r2
    847c:	e3310000 	teq	r1, #0
    8480:	05803028 	streq	r3, [r0, #40]	; 0x28
    8484:	1580301c 	strne	r3, [r0, #28]
    8488:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
    848c:	20200000 	.word	0x20200000

00008490 <main>:
    8490:	e3a0d902 	mov	sp, #32768	; 0x8000
    8494:	e3a00b01 	mov	r0, #1024	; 0x400
    8498:	e3a01c03 	mov	r1, #768	; 0x300
    849c:	e3a02010 	mov	r2, #16
    84a0:	ebfffef3 	bl	8074 <frameBufferInit>
    84a4:	e3300000 	teq	r0, #0
    84a8:	1a000006 	bne	84c8 <noError$>
    84ac:	e3a0002f 	mov	r0, #47	; 0x2f
    84b0:	e3a01001 	mov	r1, #1
    84b4:	ebffffd7 	bl	8418 <SetGpioFunction>
    84b8:	e3a0002f 	mov	r0, #47	; 0x2f
    84bc:	e3a01000 	mov	r1, #0
    84c0:	ebffffe2 	bl	8450 <SetGpio>

000084c4 <error$>:
    84c4:	eafffffe 	b	84c4 <error$>

000084c8 <noError$>:
    84c8:	e3a00c02 	mov	r0, #512	; 0x200
    84cc:	e59f1024 	ldr	r1, [pc, #36]	; 84f8 <noError$+0x30>
    84d0:	e3a02050 	mov	r2, #80	; 0x50
    84d4:	ebffff84 	bl	82ec <drawCircle>
    84d8:	e59f001c 	ldr	r0, [pc, #28]	; 84fc <noError$+0x34>
    84dc:	ebffff05 	bl	80f8 <delayMicro>
    84e0:	e3a0006b 	mov	r0, #107	; 0x6b
    84e4:	e3a01005 	mov	r1, #5
    84e8:	e3a02005 	mov	r2, #5
    84ec:	ebffff43 	bl	8200 <drawCharacter>
    84f0:	e59f0004 	ldr	r0, [pc, #4]	; 84fc <noError$+0x34>
    84f4:	ebfffeff 	bl	80f8 <delayMicro>
    84f8:	0000015e 	.word	0x0000015e
    84fc:	000f4240 	.word	0x000f4240
